{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://solcogito.dev/autoversion.schema.json",
  "title": "AutoVersion Configuration Schema",
  "description": "Defines the structure for autoversion.json configuration files.",
  "type": "object",

  "properties": {
    "versionFile": {
      "type": "string",
      "description": "Primary file where version number is stored (used as fallback target)."
    },

    "files": {
      "type": "array",
      "description": "List of files to update with the new version number.",
      "items": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Relative path to the file that contains a version reference."
          },
          "type": {
            "type": "string",
            "description": "Specifies how to update the file.",
            "enum": ["json", "xml", "regex", "text"]
          },
          "key": {
            "type": "string",
            "description": "For JSON type, specifies which key in the object holds the version."
          },
          "pattern": {
            "type": "string",
            "description": "For regex type, defines the regular expression pattern capturing the version."
          },
          "xpath": {
            "type": "string",
            "description": "For XML type, provides an XPath expression targeting the version node."
          },
          "token": {
            "type": "string",
            "description": "For text type, defines a token placeholder like {VERSION} to replace."
          },
          "encoding": {
            "type": "string",
            "description": "Optional text encoding to use when reading/writing the file.",
            "enum": ["utf-8", "utf8-bom", "ascii", "latin1", "auto"]
          }
        },
        "required": ["path", "type"],
        "additionalProperties": false
      },
      "minItems": 1
    },

    "artifacts": {
      "type": "array",
      "description": "List of build artifacts to rename using the version number.",
      "items": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to an artifact file (e.g., build output, package, archive)."
          },
          "rename": {
            "type": "string",
            "description": "Filename pattern for renaming. Use {version} placeholder to inject the version string."
          },
          "overwrite": {
            "type": "boolean",
            "default": false,
            "description": "If true, allows overwriting existing files during rename."
          }
        },
        "required": ["path", "rename"],
        "additionalProperties": false
      }
    },

    "git": {
      "type": "object",
      "description": "Git integration options for tagging and pushing releases.",
      "properties": {
        "tagPrefix": {
          "type": "string",
          "default": "v",
          "description": "Prefix added to version tags (e.g., v1.2.3)."
        },
        "push": {
          "type": "boolean",
          "default": true,
          "description": "If true, pushes the new tag to the remote after creation."
        },
        "allowDirty": {
          "type": "boolean",
          "default": false,
          "description": "If true, allows tagging even when the working directory is not clean."
        },
        "commitMessage": {
          "type": "string",
          "default": "chore(release): bump version to {version}",
          "description": "Custom commit message for automatic release commits."
        }
      },
      "additionalProperties": false
    },

    "changelog": {
      "type": "object",
      "description": "Options for changelog generation.",
      "properties": {
        "path": {
          "type": "string",
          "default": "CHANGELOG.md",
          "description": "Path where the changelog is written."
        },
        "template": {
          "type": "string",
          "description": "Optional custom markdown template for changelog entries."
        },
        "sections": {
          "type": "object",
          "description": "Mapping of Conventional Commit types to changelog sections.",
          "default": {
            "feat": "Added",
            "fix": "Fixed",
            "docs": "Documentation",
            "refactor": "Changed",
            "chore": "Maintenance"
          },
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },

    "dryRun": {
      "type": "boolean",
      "default": false,
      "description": "If true, runs in simulation mode without modifying files."
    },

    "logging": {
      "type": "object",
      "description": "Controls verbosity and color output of AutoVersion CLI.",
      "properties": {
        "verbose": { "type": "boolean", "default": false },
        "color": { "type": "boolean", "default": true },
        "level": {
          "type": "string",
          "enum": ["info", "warn", "error", "debug"],
          "default": "info"
        }
      },
      "additionalProperties": false
    }
  },

  "required": ["files"],
  "additionalProperties": false
}
